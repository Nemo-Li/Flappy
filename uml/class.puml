@startuml
package "graphics" #DDDDDD {

class Shader {
static Shader BG, BIRD, PIPE, FADE;
void enable();
void disable();
}
note left
着色器语言编译链接类,
包括顶点着色器和片段
着色器支持通过jni从
assets中获取着色器文件.
enable
end note

class Texture {
    Texture(string path, bool png);
    void bind();
    void unbind();
}
note top
纹理类,在构造函数中创建纹理,配置纹理参数.
通过jni从assert文件获取图片流信息,把图片
流绑定到创建的纹理上,释放图片内存.
使用stb_image来解析图片
1.一张图片对应一个Texture对象
2.使用时先bind,使用完unbind.
3.加载png和jpg图片不一样，需要区分
end note

class VertexArray {
    void bind();
    void unbind();
    void draw();
    void render();
}
note top
顶点数组类,把顶点数据信息通过
opengl传递到显卡缓存,最终渲染
时绑定vao和ibo，最终的绘制都
在这里进行绘制
end note

}

package "levels" #DDFF00{
class Bird {
void update();
void fall();
void render();
}

Texture *-- Bird
VertexArray *-- Bird
class Pipe {
static Texture texture;
static VertexArray mesh;
}

Texture *-- Pipe
VertexArray *-- Pipe
class Level {
+ void render();
+ void update();
- void createPipes();
- void updatePipes();
- bool collision();
- void renderPipes();
}
Texture *-- Level
VertexArray *-- Level
}
Level <.. Render
class Render {
    void performGLInit();
    void setViewport(int width, int height);
    void render();
}
note bottom
渲染类,初始化opengl
加载所有的着色器
依赖level类去真正的渲染
end note

together {
class ShaderHelper {
static int CreateProgram(string vertexSource, string fragSource);
}
note bottom
通用的着色器帮助类，编译链接生成
着色器program id,提供opengl
错误检测方法
end note
Shader ..> ShaderHelper

class JNIHelper {
}
Texture ..> JNIHelper
Shader ..> JNIHelper
}


class java.MainActivity {
void onCreate()
void onDestroy()
}

class c.MainActivity {
native void createObjectNative()
native void deleteObjectNative()
}
note bottom
MainActivity的c端交互类
和MainActivity保持一致的
生命周期
end note

java.MainActivity ..> c.MainActivity

class java.FlappyRender {
void onSurfaceCreated()
void onSurfaceChanged()
void onDrawFrame()
}

class c.IFlappyRender {
native void drawFrameNative()
native void surfaceCreatedNative()
native void surfaceChangedNative()
}
note bottom
和surfaceView的c端交互类
surfaceView的相关jni
实现方法
end note

java.FlappyRender ..> c.IFlappyRender
Render <.. c.IFlappyRender

JNIHelper -[hidden]> java.FlappyRender
Render -[hidden]> java.FlappyRender
@enduml